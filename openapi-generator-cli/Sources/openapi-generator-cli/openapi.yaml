openapi: 3.0.1
info:
  title: NOFFICE API Docs
  description: |
    테스트 프로덕션용 NOFFICE API 명세서입니다.
  version: v1.0
servers:
  - url: 'http://localhost:8080'
    description: local server
  - url: 'https://api.noffice.store'
    description: develop server
security:
  - BearerToken: []
tags:
  - name: 회원
    description: '회원 로그인, 정보 조회 API'
  - name: 노티
    description: 노티(조직 내 공지) 관련 API
  - name: 알림
    description: 노티 알림 발송 관련 API
  - name: 조직
    description: 조직 관련 API
  - name: 투두
    description: 노티 하위 발급 투두 리스트 관련 API
paths:
  /api/v1/tasks:
    get:
      tags:
        - 투두
      summary: 투두 목록 조회
      operationId: getTasks
      responses:
        '200':
          description: 투두 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseTaskResponses'
        '404':
          description: 등록된 투두가 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseTaskResponses'
    post:
      tags:
        - 투두
      summary: 투두 생성
      operationId: createTask
      parameters:
        - name: taskCreateRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/TaskCreateRequest'
      responses:
        '201':
          description: 투두 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseTaskCreateResponse'
        '400':
          description: 투두 생성 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseTaskCreateResponse'
  /api/v1/tasks/bulk:
    post:
      tags:
        - 투두
      summary: 투두 대량 생성
      operationId: createBulkTask
      parameters:
        - name: taskBulkCreateRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/TaskBulkCreateRequest'
      responses:
        '201':
          description: 투두 대량 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseTaskCreateResponses'
        '400':
          description: 투두 대량 생성 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseTaskCreateResponses'
  /api/v1/organizations:
    get:
      tags:
        - 조직
      summary: 사용자의 가입된 조직 페이징 조회
      description: 멤버가 가입한 조직 목록을 조회합니다.
      operationId: getJoinedOrganizations
      parameters:
        - name: memberId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: 회원의 가입된 조직 조회에 성공하였습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseSliceOrganizationResponse'
        '404':
          description: 가입된 조직이 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseSliceOrganizationResponse'
    post:
      tags:
        - 조직
      summary: 조직 생성
      description: 조직을 생성합니다.
      operationId: createOrganization
      parameters:
        - name: memberId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateRequest'
        required: true
      responses:
        '201':
          description: 조직 생성에 성공하였습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseOrganizationCreateResponse'
        '400':
          description: 조직 생성에 실패하였습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseOrganizationCreateResponse'
  '/api/v1/organizations/{organizationId}/join':
    post:
      tags:
        - 조직
      summary: 조직 가입
      description: 조직에 가입합니다.
      operationId: joinOrganization
      parameters:
        - name: memberId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 조직 가입에 성공하였습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseOrganizationJoinResponse'
  /api/v1/notifications:
    get:
      tags:
        - 알림
      summary: 사용자에게 수신된 알림 조회
      description: 사용자에게 수신된 알림을 조회합니다.
      operationId: getNotifications
      parameters:
        - name: memberId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 알림 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
        '404':
          description: 알림이 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
    post:
      tags:
        - 알림
      summary: 단일 사용자 알림 대기열 추가
      description: 단일 사용자를 특정하여 노티 알림 대기열에 등록합니다.
      operationId: createNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
        required: true
      responses:
        '200':
          description: 알림 대기열 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
        '400':
          description: 알림 발송 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
    patch:
      tags:
        - 알림
      summary: 알림 발송 시간 변경
      description: 노티 알림 발송 시간을 변경합니다.
      operationId: changeSendTime
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTimeChangeRequest'
        required: true
      responses:
        '200':
          description: 알림 발송 시간 변경 성공
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NofficeResponseNotificationTimeChangeResponse
        '400':
          description: 알림 발송 시간 변경 실패
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NofficeResponseNotificationTimeChangeResponse
  /api/v1/notifications/bulk:
    post:
      tags:
        - 알림
      summary: 조직 단위 알림 대량 발송
      description: 조직 내 모든 사용자에게 전체 발송되는 알림을 등록합니다.
      operationId: createBulkNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationBulkRequest'
        required: true
      responses:
        '200':
          description: 조직 전체 알림 대량 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
        '400':
          description: 조직 전체 알림 대량 등록 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
  /api/v1/member/reissue:
    post:
      tags:
        - 회원
      summary: 토큰 재발급
      description: 리프레시 토큰을 이용해 새로운 액세스 토큰을 발급합니다.
      operationId: reissue
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 액세스 토큰 재발급에 성공하였습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseTokenResponse'
  /api/v1/member/login:
    post:
      tags:
        - 회원
      summary: 회원 로그인
      description: 본문에 소셜 공급자명과 인가코드를 넣어 노피스 서버 로그인을 시도합니다.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialAuthRequest'
        required: true
      responses:
        '200':
          description: 로그인에 성공하였습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseSocialAuthResponse'
  /api/v1/announcement:
    post:
      tags:
        - 노티
      summary: 노티 생성
      description: 노티를 생성합니다.
      operationId: createAnnouncement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementCreateRequest'
        required: true
      responses:
        '201':
          description: 노티 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseAnnouncementResponse'
        '400':
          description: 노티 생성 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseAnnouncementResponse'
  '/api/v1/announcement/{announcementId}':
    get:
      tags:
        - 노티
      summary: 노티 조회
      description: 노티를 조회합니다.
      operationId: getAnnouncement
      parameters:
        - name: announcementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 노티 단일 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseAnnouncementResponse'
        '404':
          description: 해당 노티가 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseAnnouncementResponse'
    post:
      tags:
        - 노티
      summary: 노티 수정
      description: 노티를 수정합니다.
      operationId: updateAnnouncement
      parameters:
        - name: announcementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementUpdateRequest'
        required: true
      responses:
        '200':
          description: 노티 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseAnnouncementResponse'
        '404':
          description: 해당 노티가 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseAnnouncementResponse'
    delete:
      tags:
        - 노티
      summary: 노티 삭제
      description: 노티를 삭제합니다.
      operationId: deleteAnnouncement
      parameters:
        - name: announcementId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 노티 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
        '400':
          description: 노티 삭제에 실패하였습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
  /api/v1/tasks/assigned:
    get:
      tags:
        - 투두
      summary: 사용자 할당 투두 목록 조회
      operationId: getAssignedTasks
      parameters:
        - name: memberId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: 사용자 할당 투두 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseSliceAssignedTaskResponse'
        '404':
          description: 사용자 할당된 투두가 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseSliceAssignedTaskResponse'
  '/api/v1/organizations/{organizationId}':
    get:
      tags:
        - 조직
      summary: 단일 조직 정보 조회
      description: 조직의 정보를 조회합니다.
      operationId: getOrganization
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 조직 정보 조회에 성공하였습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseOrganizationResponse'
        '404':
          description: 조직 정보가 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseOrganizationResponse'
  '/api/v1/organizations/{organizationId}/announcements':
    get:
      tags:
        - 조직
      summary: 조직별 노티 페이징 조회
      description: 조직별 노티를 페이징 조회합니다.
      operationId: getPublishedAnnouncements
      parameters:
        - name: memberId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: 조직별 노티 페이징 조회 성공
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NofficeResponseSliceAnnouncementCoverResponse
        '404':
          description: 조직에 등록된 노티가 없습니다.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NofficeResponseSliceAnnouncementCoverResponse
  /api/v1/member:
    get:
      tags:
        - 회원
      summary: 단일 회원 정보 조회
      description: 회원의 정보를 조회합니다.
      operationId: getMember
      parameters: []
      responses:
        '200':
          description: 회원 정보 조회에 성공하였습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseMemberResponse'
  '/api/v1/tasks/{taskId}':
    delete:
      tags:
        - 투두
      summary: 투두 삭제
      operationId: deleteTask
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 투두 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
        '400':
          description: 투두 삭제 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
  '/api/v1/notifications/{notificationId}':
    delete:
      tags:
        - 알림
      summary: 알림 삭제
      description: 노티 알림을 삭제합니다.
      operationId: deleteNotification
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: 알림 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
        '400':
          description: 알림 삭제 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NofficeResponseVoid'
components:
  schemas:
    TaskCreateRequest:
      required:
        - content
      type: object
      properties:
        content:
          type: string
          description: 투두 항목
          example: 노피스 API 제작
    NofficeResponseTaskCreateResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/TaskCreateResponse'
    TaskCreateResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        announcementId:
          type: integer
          format: int64
        content:
          type: string
    TaskBulkCreateRequest:
      required:
        - contents
      type: object
      properties:
        contents:
          type: array
          description: 투두 항목 목록
          example:
            - 노피스 API 제작
            - 노피스 API 문서 작성
          items:
            type: string
            description: 투두 항목 목록
            example: '["노피스 API 제작","노피스 API 문서 작성"]'
    NofficeResponseTaskCreateResponses:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/TaskCreateResponses'
    TaskCreateResponses:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskResponse'
    TaskResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        announcementId:
          type: integer
          format: int64
        content:
          type: string
    OrganizationCreateRequest:
      required:
        - categoryList
        - name
      type: object
      properties:
        name:
          type: string
          description: 조직 이름
          example: 조지기름
        categoryList:
          type: array
          description: 카테고리 ID 목록
          example:
            - 1
            - 2
          items:
            type: integer
            description: 카테고리 ID 목록
            format: int64
        profileImage:
          type: string
          description: 조직 커버 이미지 URL
          example: 'https://test-image.com/cover_image.jpg'
        endAt:
          type: string
          description: 조직 활동 마감일자
          format: date-time
        promotionCode:
          $ref: '#/components/schemas/PromotionVerifyRequest'
    PromotionVerifyRequest:
      type: object
      properties:
        promotionCode:
          type: string
          description: 프로모션 코드 문자열
          example: CODE_IS_HYPER_ART
      description: 프로모션 코드 문자열
      example: NOFFICE_HART
    NofficeResponseOrganizationCreateResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/OrganizationCreateResponse'
    OrganizationCreateResponse:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          description: 조직 ID
          format: int64
        name:
          type: string
          description: 조직 이름
          example: 조직 이름
        endAt:
          type: string
          description: 조직 활동 마감일자
          format: date-time
        profileImage:
          type: string
          description: 조직 커버 이미지 URL
          example: 'https://test-image.com/cover_image.jpg'
        promotion:
          $ref: '#/components/schemas/PromotionVerifyResponse'
    PromotionVerifyResponse:
      type: object
      properties:
        promotionId:
          type: integer
          description: 프로모션 ID
          format: int64
          example: 1
        promotionName:
          type: string
          description: 프로모션 이름
          example: 예술은 폭발이다
        promotionCode:
          type: string
          description: 프로모션 코드 문자열
          example: CODE_IS_HYPER_ART
        isVerified:
          type: boolean
          description: 프로모션 진행 여부
          example: false
      description: 프로모션 진행 여부
      example: false
    NofficeResponseOrganizationJoinResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/OrganizationJoinResponse'
    OrganizationJoinResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        link:
          type: string
    NotificationRequest:
      required:
        - memberId
        - sendAt
        - title
      type: object
      properties:
        title:
          type: string
          example: 알림 제목
        content:
          type: string
          example: 알림 내용
        memberId:
          type: integer
          format: int64
          example: 1
        sendAt:
          type: string
          format: date-time
    NofficeResponseVoid:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          type: object
    NotificationBulkRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        announcementId:
          type: integer
          format: int64
        noticeBefore:
          type: array
          items:
            type: string
        noticeDate:
          type: array
          items:
            type: string
    NofficeResponseTokenResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/TokenResponse'
    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    SocialAuthRequest:
      required:
        - code
        - provider
      type: object
      properties:
        provider:
          type: string
          description: 소셜 로그인 제공자
          example: APPLE
          enum:
            - GOOGLE
            - APPLE
        code:
          type: string
          description: 제공자로부터 얻은 사용자별 인가 코드
          example: 1q2w3e4r
    NofficeResponseSocialAuthResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/SocialAuthResponse'
    SocialAuthResponse:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        memberName:
          type: string
        provider:
          type: string
          enum:
            - GOOGLE
            - APPLE
        token:
          $ref: '#/components/schemas/TokenResponse'
    AnnouncementCreateRequest:
      required:
        - content
        - endAt
        - memberId
        - noticeBefore
        - noticeDate
        - organizationId
        - title
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
        memberId:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: 공지 제목
        content:
          type: string
          example: 공지 내용
        profileImageUrl:
          type: string
          example: 프로필 이미지 URL
        placeLinkName:
          type: string
          example: 장소 링크 이름
        placeLinkUrl:
          type: string
          example: 장소 링크 URL
        isFaceToFace:
          type: boolean
          example: true
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskCreateRequest'
        endAt:
          type: string
          example: '2021-07-01T 00:00:00'
        noticeBefore:
          type: array
          example: '[2021-07-01T00:00:00, 2021-07-02T00:00:00]'
          items:
            type: string
            example: '[2021-07-01T00:00:00, 2021-07-02T00:00:00]'
        noticeDate:
          type: array
          items:
            type: string
    AnnouncementResponse:
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
        memberId:
          type: integer
          format: int64
        announcementId:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        profileImageUrl:
          type: string
        placeLinkName:
          type: string
        placeLinkUrl:
          type: string
        endAt:
          type: string
          format: date-time
        noticeAt:
          type: array
          items:
            type: string
            format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    NofficeResponseAnnouncementResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/AnnouncementResponse'
    AnnouncementUpdateRequest:
      required:
        - content
        - endAt
        - memberId
        - noticeBefore
        - noticeDate
        - organizationId
        - title
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
        memberId:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: 공지 제목
        content:
          type: string
          example: 공지 내용
        profileImageUrl:
          type: string
          example: 프로필 이미지 URL
        placeLinkName:
          type: string
          example: 장소 링크 이름
        placeLinkUrl:
          type: string
          example: 장소 링크 URL
        isFaceToFace:
          type: boolean
          example: true
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskCreateRequest'
        endAt:
          type: string
          example: '2021-07-01T 00:00:00'
        noticeBefore:
          type: array
          example: '[2021-07-01T00:00:00, 2021-07-02T00:00:00]'
          items:
            type: string
            example: '[2021-07-01T00:00:00, 2021-07-02T00:00:00]'
        noticeDate:
          type: array
          items:
            type: string
    NotificationTimeChangeRequest:
      required:
        - announcementId
        - noticeBefore
        - noticeDate
      type: object
      properties:
        announcementId:
          type: integer
          description: 공지 ID
          format: int64
          example: 1
        noticeBefore:
          type: array
          description: 알림 시간 변경 초(second)
          example: '60, 120, 180'
          items:
            type: string
            description: 알림 시간 변경 초(second)
            example: '60, 120, 180'
        noticeDate:
          type: array
          description: 알림 시간 변경 기준 일자
          example:
            - '2021-07-01T00:00:00'
            - '2021-07-02T00:00:00'
          items:
            type: string
            description: 알림 시간 변경 기준 일자
            example: '["2021-07-01T00:00:00","2021-07-02T00:00:00"]'
    NofficeResponseNotificationTimeChangeResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/NotificationTimeChangeResponse'
    NotificationResponse:
      type: object
      properties:
        notificationId:
          type: integer
          format: int64
        announcementId:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
    NotificationTimeChangeResponse:
      type: object
      properties:
        announcementId:
          type: integer
          format: int64
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/NotificationResponse'
    NofficeResponseTaskResponses:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/TaskResponses'
    TaskResponses:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskResponse'
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    AssignedTaskResponse:
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
        organizationName:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskResponse'
    NofficeResponseSliceAssignedTaskResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/SliceAssignedTaskResponse'
    PageableObject:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/SortObject'
        offset:
          type: integer
          format: int64
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    SliceAssignedTaskResponse:
      type: object
      properties:
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/AssignedTaskResponse'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    NofficeResponseSliceOrganizationResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/SliceOrganizationResponse'
    OrganizationResponse:
      type: object
      properties:
        id:
          type: integer
          description: 조직 ID
          format: int64
        name:
          type: string
          description: 조직 이름
    SliceOrganizationResponse:
      type: object
      properties:
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationResponse'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    NofficeResponseOrganizationResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/OrganizationResponse'
    AnnouncementCoverResponse:
      type: object
      properties:
        announcementId:
          type: integer
          format: int64
        title:
          type: string
        profileImageUrl:
          type: string
        placeLinkName:
          type: string
        placeLinkUrl:
          type: string
        endAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    NofficeResponseSliceAnnouncementCoverResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/SliceAnnouncementCoverResponse'
    SliceAnnouncementCoverResponse:
      type: object
      properties:
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/AnnouncementCoverResponse'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    MemberResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        alias:
          type: string
        profileImage:
          type: string
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationResponse'
    NofficeResponseMemberResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/MemberResponse'
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
