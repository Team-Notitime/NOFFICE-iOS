---
openapi: 3.0.1
info:
  title: NOFFICE API Docs
  description: '테스트 프로덕션용 NOFFICE API 명세서입니다.

    '
  version: v1.0
servers:
- url: https://api.noffice.store
  description: develop server
- url: http://localhost:8080
  description: local server
security:
- Bearer_Token: []
tags:
- name: 회원
  description: 회원 로그인, 정보 조회 API
- name: 노티
  description: 노티(조직 내 공지) 관련 API
- name: 알림
  description: 노티 알림 발송 관련 API
- name: 카테고리
  description: 조직 분류 카테고리 관련 API
- name: 서버 헬스 체크
  description: 노피스 서버 상태 확인 API
- name: 조직
  description: 조직 관련 API
- name: 프로모션
  description: 프로모션 관련 API
- name: 이미지
  description: 이미지 업로드 및 디렉토리 요청 API
- name: 투두
  description: 노티 하위 발급 투두 리스트 관련 API
paths:
  "/api/v1/organizations/{organizationId}/categories":
    put:
      tags:
      - 조직
      summary: "[인증] 조직 카테고리 수정"
      description: 조직에 등록된 카테고리를 수정합니다.
      operationId: modifyCategories
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CategoryModifyRequest"
        required: true
      responses:
        '200':
          description: 조직 카테고리 수정 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseCategoryModifyResponse"
        '404':
          description: 조직에 등록된 카테고리가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseCategoryModifyResponse"
  "/api/v1/promotion/grant-organization":
    post:
      tags:
      - 프로모션
      summary: 프로모션 가입
      description: 조직에 프로모션 권한을 부여합니다.
      operationId: grantOrganization
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PromotionGrantRequest"
        required: true
      responses:
        '200':
          description: 프로모션 가입 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '404':
          description: 조직이 존재하지 않습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
  "/api/v1/organizations":
    get:
      tags:
      - 조직
      summary: "[인증] 사용자의 가입된 조직 페이징 조회"
      description: 멤버가 가입한 조직 목록을 조회합니다.
      operationId: getJoined
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          "$ref": "#/components/schemas/Pageable"
      responses:
        '200':
          description: 회원의 가입된 조직 조회에 성공하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseSliceOrganizationResponse"
        '404':
          description: 가입된 조직이 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseSliceOrganizationResponse"
    post:
      tags:
      - 조직
      summary: "[인증] 조직 생성"
      description: 조직을 생성합니다.
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganizationCreateRequest"
        required: true
      responses:
        '201':
          description: 조직 생성에 성공하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseOrganizationCreateResponse"
        '400':
          description: 조직 생성에 실패하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseOrganizationCreateResponse"
  "/api/v1/organizations/{organizationId}/join":
    post:
      tags:
      - 조직
      summary: "[인증] 조직 가입"
      description: 조직에 가입합니다.
      operationId: join
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 조직 가입에 성공하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseOrganizationJoinResponse"
  "/api/v1/notifications":
    get:
      tags:
      - 알림
      summary: "[인증] 사용자에게 수신된 알림 조회"
      description: 사용자에게 수신된 알림을 조회합니다.
      operationId: findById
      responses:
        '200':
          description: 알림 조회 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '404':
          description: 알림이 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
    post:
      tags:
      - 알림
      summary: "[인증] 단일 사용자 알림 대기열 추가"
      description: 단일 사용자를 특정하여 노티 알림 대기열에 등록합니다.
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NotificationRequest"
        required: true
      responses:
        '200':
          description: 알림 대기열 등록 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '400':
          description: 알림 발송 실패
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
    patch:
      tags:
      - 알림
      summary: "[인증] 알림 발송 시간 변경"
      description: 노티 알림 발송 시간을 변경합니다.
      operationId: changeSendTime
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NotificationTimeChangeRequest"
        required: true
      responses:
        '200':
          description: 알림 발송 시간 변경 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseNotificationTimeChangeResponse"
        '400':
          description: 알림 발송 시간 변경 실패
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseNotificationTimeChangeResponse"
  "/api/v1/notifications/fcm-token":
    post:
      tags:
      - 알림
      summary: 기기별 FCM Token 저장
      description: 기기별 FCM Token을 저장합니다.
      operationId: saveFcmToken
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '201':
          description: FCM Token 저장 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '400':
          description: FCM Token 저장 실패
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
  "/api/v1/notifications/bulk":
    post:
      tags:
      - 알림
      summary: "[인증] 조직 단위 알림 대량 발송"
      description: 조직 내 모든 사용자에게 전체 발송되는 알림을 등록합니다.
      operationId: createAll
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NotificationBulkRequest"
        required: true
      responses:
        '200':
          description: 조직 전체 알림 대량 등록 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '400':
          description: 조직 전체 알림 대량 등록 실패
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
  "/api/v1/member/reissue":
    post:
      tags:
      - 회원
      summary: 토큰 재발급
      description: 리프레시 토큰을 이용해 새로운 액세스 토큰을 발급합니다.
      operationId: reissue
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: 액세스 토큰 재발급에 성공하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseTokenResponse"
  "/api/v1/member/login":
    post:
      tags:
      - 회원
      summary: 회원 로그인
      description: 본문에 소셜 공급자명과 인가코드를 넣어 노피스 서버 로그인을 시도합니다.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SocialAuthRequest"
        required: true
      responses:
        '200':
          description: 로그인에 성공하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseSocialAuthResponse"
  "/api/v1/image":
    get:
      tags:
      - 이미지
      summary: 컨텐츠 이미지 업로드 위치 요청
      description: fileType에는 확장자를, fileName은 파일명을 넣어주세요. imageType은 이미지 유형을 명시해주세요.
      operationId: getContentImage
      parameters:
      - name: fileType
        in: query
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        required: true
        schema:
          type: string
      - name: imagePurpose
        in: query
        required: true
        schema:
          type: string
          enum:
          - ORGANIZATION_LOGO
          - MEMBER_PROFILE
          - ANNOUNCEMENT_PROFILE
          - ANNOUNCEMENT_CONTENT
          - PROMOTION_COVER
      responses:
        '200':
          description: 이미지 업로드 위치 요청에 성공하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContentImagePresignedUrlVO"
    post:
      tags:
      - 이미지
      summary: 컨텐츠 이미지 업로드 완료
      description: 컨텐츠 이미지 업로드 완료를 노피스 서버에 알립니다.
      operationId: notifyContentImageSaveSuccess
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NotifyContentImageSaveSuccessRequest"
        required: true
      responses:
        '200':
          description: 별도 파일을 제외한 POST 요청을 발송해주세요.
  "/api/v1/announcement":
    post:
      tags:
      - 노티
      summary: 노티 생성
      description: 노티를 생성합니다.
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AnnouncementCreateRequest"
        required: true
      responses:
        '201':
          description: 노티 생성 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseAnnouncementResponse"
        '400':
          description: 노티 생성 실패
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseAnnouncementResponse"
  "/api/v1/announcement/{announcementId}":
    get:
      tags:
      - 노티
      summary: "[인증] 조직에 발급된 노티 열람"
      description: 열람하려는 노티를 조회하고, 열람 기록에 추가합니다.
      operationId: read
      parameters:
      - name: announcementId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 노티 단일 조회 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseAnnouncementResponse"
        '404':
          description: 해당 노티가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseAnnouncementResponse"
    post:
      tags:
      - 노티
      summary: "[인증] 노티 수정"
      description: 노티를 수정합니다.
      operationId: update
      parameters:
      - name: announcementId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AnnouncementUpdateRequest"
        required: true
      responses:
        '200':
          description: 노티 수정 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseAnnouncementResponse"
        '404':
          description: 해당 노티가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseAnnouncementResponse"
    delete:
      tags:
      - 노티
      summary: "[인증] 노티 삭제"
      description: 노티를 삭제합니다.
      operationId: delete_1
      parameters:
      - name: announcementId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: 노티 삭제 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '400':
          description: 노티 삭제에 실패하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
  "/api/v1/announcement/{announcementId}/remind-unread":
    post:
      tags:
      - 노티
      summary: 노티 미열람자 대상 FCM 알림
      description: 노티 미열람자 대상으로 알림을 전송합니다.
      operationId: sendToUnReader
      parameters:
      - name: announcementId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 알림 전송 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseFCMCreateResponse"
        '400':
          description: 알림 전송에 실패하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseFCMCreateResponse"
  "/api/v1/tasks":
    patch:
      tags:
      - 투두
      summary: 투두 수정
      operationId: modify
      parameters:
      - name: taskModifyRequest
        in: query
        required: true
        schema:
          "$ref": "#/components/schemas/TaskModifyRequest"
      responses:
        '200':
          description: 투두 수정 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseTaskModifyResponse"
        '400':
          description: 투두 수정 실패
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseTaskModifyResponse"
  "/api/v1/organizations/{organizationId}/roles":
    patch:
      tags:
      - 조직
      summary: "[인증] 조직원 권한 변경"
      description: 타겟에 해당하는 멤버의 조직 내 권한을 입력한 권한대로 변경합니다.
      operationId: changeRoles
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChangeRoleRequest"
        required: true
      responses:
        '204':
          description: 권한 변경에 성공하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '400':
          description: 권한 변경에 실패하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '403':
          description: 요청을 수행할 수 있는 권한이 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '404':
          description: 조직원이 존재하지 않습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
  "/api/v1/organizations/{organizationId}/register":
    patch:
      tags:
      - 조직
      summary: "[인증] 조직 가입 수락"
      description: 조직 가입대기 사용자 목록을 가입 처리합니다.
      operationId: registerMember
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChangeRoleRequest"
        required: true
      responses:
        '204':
          description: 조직 가입 승인 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '400':
          description: 조직 가입 수락 실패
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponse"
        '403':
          description: 요청을 수행할 수 있는 권한이 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponse"
        '404':
          description: 조직원이 존재하지 않습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponse"
        '500':
          description: 서버 내부 에러 발생
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponse"
  "/api/v1/tasks/assigned":
    get:
      tags:
      - 투두
      summary: 사용자 할당 투두 목록 조회
      operationId: getAssigned
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          "$ref": "#/components/schemas/Pageable"
      responses:
        '200':
          description: 사용자 할당 투두 조회 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseSliceAssignedTaskResponse"
        '404':
          description: 사용자 할당된 투두가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseSliceAssignedTaskResponse"
  "/api/v1/promotion/verify":
    get:
      tags:
      - 프로모션
      summary: 프로모션 코드 검증
      description: 프로모션 코드를 검증합니다.
      operationId: verifyPromotionCode
      parameters:
      - name: promotionCode
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: 프로모션 코드 검증 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponsePromotionVerifyResponse"
        '404':
          description: 프로모션 코드가 존재하지 않습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponsePromotionVerifyResponse"
  "/api/v1/organizations/{organizationId}":
    get:
      tags:
      - 조직
      summary: "[인증] 단일 조직 정보 조회"
      description: 조직의 정보(조직명, 가입 대기여부, 가입자수) 를 조회합니다.
      operationId: getInformation
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 조직 정보 조회에 성공하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseOrganizationInfoResponse"
        '404':
          description: 조직 정보가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseOrganizationInfoResponse"
  "/api/v1/organizations/{organizationId}/signup-info":
    get:
      tags:
      - 조직
      summary: "[인증] 조직 가입 정보 조회"
      description: 조직 가입을 위한 공개정보를 조회합니다. (조직명, 프로필 이미지 주소)
      operationId: getSignUpInfo
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 조직 가입 정보 조회에 성공하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseOrganizationSignupResponse"
        '404':
          description: 조직 정보가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseOrganizationSignupResponse"
  "/api/v1/organizations/{organizationId}/selectable-cover":
    get:
      tags:
      - 조직
      summary: "[인증] 선택 가능한 커버 이미지 조회"
      description: 공지 발행 시 선택 가능한 커버 이미지를 모두 조회합니다.
      operationId: getSelectableCover
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 선택 가능한 공지 커버 이미지 목록 조회 성
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseOrganizationImageResponse"
        '404':
          description: 공지 커버 이미지가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseOrganizationImageResponse"
  "/api/v1/organizations/{organizationId}/pending-members":
    get:
      tags:
      - 조직
      summary: "[인증] 조직 가입 대기자 조회"
      description: 조직 가입 대기자를 조회합니다.
      operationId: getPendingMembers
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 조직 가입 대기자 조회에 성공하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseListMemberInfoResponse"
        '404':
          description: 조직 가입 대기자가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseListMemberInfoResponse"
  "/api/v1/organizations/{organizationId}/announcements":
    get:
      tags:
      - 조직
      summary: "[인증] 조직별 노티 페이징 조회"
      description: 조직별 노티를 페이징 조회합니다.
      operationId: getPublishedAnnouncements
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          "$ref": "#/components/schemas/Pageable"
      responses:
        '200':
          description: 조직별 노티 페이징 조회 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseSliceAnnouncementCoverResponse"
        '404':
          description: 조직에 등록된 노티가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseSliceAnnouncementCoverResponse"
  "/api/v1/member":
    get:
      tags:
      - 회원
      summary: "[인증] 단일 회원 정보 조회"
      description: 회원의 정보를 조회합니다.
      operationId: getById
      responses:
        '200':
          description: 회원 정보 조회에 성공하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseMemberResponse"
  "/api/v1/health":
    get:
      tags:
      - 서버 헬스 체크
      summary: 서버 상태 확인
      description: 정상 동작시 200 반환합니다.
      operationId: health
      responses:
        '200':
          description: OK
  "/api/v1/category":
    get:
      tags:
      - 카테고리
      summary: 전체 카테고리 조회
      description: 등록 가능한 모든 카테고리를 조회합니다.
      operationId: getCategories
      responses:
        '200':
          description: 카테고리 목록 조회 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseCategoryResponses"
        '404':
          description: 등록된 카테고리가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseCategoryResponses"
  "/api/v1/announcement/{announcementId}/unreaders":
    get:
      tags:
      - 노티
      summary: '공지 미열람 사용자 목록 조회 '
      description: 공지에 대한 미열람 사용자 목록을 조회합니다.
      operationId: getUnReadMembers
      parameters:
      - name: announcementId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 공지 미열람 사용자 목록 조회 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseReadStatusResponse"
        '404':
          description: 공지에 대한 미열람 사용자가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseReadStatusResponse"
  "/api/v1/announcement/{announcementId}/tasks":
    get:
      tags:
      - 노티
      summary: "[인증] 노티에 발급된 투두 조회"
      description: 노티에 발급된 투두를 조회합니다.
      operationId: getTasksById
      parameters:
      - name: announcementId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 노티에 발급된 투두 조회 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseTaskResponses"
        '404':
          description: 노티에 발급된 투두가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseTaskResponses"
  "/api/v1/announcement/{announcementId}/readers":
    get:
      tags:
      - 노티
      summary: '공지 열람 사용자 목록 조회 '
      description: 공지에 대한 열람 사용자 목록을 조회합니다.
      operationId: getReadMembers
      parameters:
      - name: announcementId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: 공지 열람 사용자 목록 조회 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseReadStatusResponse"
        '404':
          description: 공지에 대한 열람 사용자가 없습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseReadStatusResponse"
  "/api/v1/notifications/{notificationId}":
    delete:
      tags:
      - 알림
      summary: 알림 삭제
      description: 노티 알림을 삭제합니다.
      operationId: delete
      parameters:
      - name: notificationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: 알림 삭제 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '400':
          description: 알림 삭제 실패
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
  "/api/v1/announcement/{announcementId}/tasks/{taskId}":
    delete:
      tags:
      - 노티
      summary: 노티에 발급된 투두 삭제
      description: 노티에 발급된 투두를 삭제합니다.
      operationId: deleteTaskById
      parameters:
      - name: announcementId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: 노티에 발급된 투두 삭제 성공
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
        '400':
          description: 노티에 발급된 투두 삭제에 실패하였습니다.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NofficeResponseVoid"
components:
  schemas:
    SortObject:
      type: array
      items:
        type: object
        properties:
          sorted:
            type: string
            example: 'true'
          unsorted:
            type: string
            example: 'false'
          empty:
            type: string
            example: 'false'
    CategoryModifyRequest:
      required:
      - categoryIds
      type: object
      properties:
        categoryIds:
          type: array
          description: 수정하려는 카테고리 ID 목록
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            description: 수정하려는 카테고리 ID 목록
            format: int64
    CategoryModifyResponse:
      required:
      - organizationId
      - organizationName
      type: object
      properties:
        organizationId:
          type: integer
          description: 카테고리 수정된 조직 식별자
          format: int64
          example: 1
        organizationName:
          type: string
          description: 카테고리 수정된 조직 이름
          example: 'CMC 15th : NotiTime'
        categories:
          "$ref": "#/components/schemas/CategoryResponses"
    CategoryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    CategoryResponses:
      type: object
      properties:
        categories:
          type: array
          items:
            "$ref": "#/components/schemas/CategoryResponse"
      description: 변경된 카테고리 목록
    NofficeResponseCategoryModifyResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/CategoryModifyResponse"
    PromotionGrantRequest:
      type: object
      properties:
        promotionId:
          type: integer
          description: 프로모션 ID
          format: int64
          example: 1
        organizationId:
          type: integer
          description: 조직 ID
          format: int64
          example: 1
    NofficeResponseVoid:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          type: object
    OrganizationCreateRequest:
      required:
      - categoryList
      - name
      type: object
      properties:
        name:
          type: string
          description: 조직 이름
          example: 조지기름
        categoryList:
          type: array
          description: 카테고리 ID 목록
          example:
          - 1
          - 2
          items:
            type: integer
            description: 카테고리 ID 목록
            format: int64
        profileImage:
          type: string
          description: 조직 커버 이미지 URL
          example: https://test-image.com/cover_image.jpg
        endAt:
          type: string
          description: 조직 활동 마감일자
          format: date-time
        promotionCode:
          "$ref": "#/components/schemas/PromotionVerifyRequest"
    PromotionVerifyRequest:
      type: object
      properties:
        promotionCode:
          type: string
          description: 프로모션 코드 문자열
          example: CODE_IS_HYPER_ART
      description: 프로모션 코드 문자열
      example: NOFFICE_HART
    NofficeResponseOrganizationCreateResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/OrganizationCreateResponse"
    OrganizationCreateResponse:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: 조직 ID
          format: int64
        name:
          type: string
          description: 조직 이름
          example: 조직 이름
        endAt:
          type: string
          description: 조직 활동 마감일자
          format: date-time
        profileImage:
          type: string
          description: 조직 커버 이미지 URL
          example: https://test-image.com/cover_image.jpg
        promotion:
          "$ref": "#/components/schemas/PromotionVerifyResponse"
    PromotionVerifyResponse:
      type: object
      properties:
        promotionId:
          type: integer
          description: 프로모션 ID
          format: int64
          example: 1
        promotionCode:
          type: string
          description: 프로모션 코드 문자열
          example: NOFFICEWELCOME
      description: 프로모션 진행 여부
      example: false
    NofficeResponseOrganizationJoinResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/OrganizationJoinResponse"
    OrganizationJoinResponse:
      required:
      - memberId
      - organizationId
      type: object
      properties:
        organizationId:
          type: integer
          description: 조직 ID
          format: int64
          example: 1
        organizationName:
          type: string
          description: 조직 이름
          example: Noffice
        memberId:
          type: integer
          description: 가입한 사용자 식별자
          format: int64
          example: 1
    NotificationRequest:
      required:
      - memberId
      - sendAt
      - title
      type: object
      properties:
        title:
          type: string
          example: 알림 제목
        content:
          type: string
          example: 알림 내용
        memberId:
          type: integer
          format: int64
          example: 1
        sendAt:
          type: string
          format: date-time
    NotificationBulkRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        announcementId:
          type: integer
          format: int64
        noticeBefore:
          type: array
          items:
            type: string
        noticeDate:
          type: array
          items:
            type: string
    NofficeResponseTokenResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/TokenResponse"
    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    SocialAuthRequest:
      required:
      - code
      - provider
      type: object
      properties:
        provider:
          type: string
          description: 소셜 로그인 제공자
          example: APPLE
          enum:
          - GOOGLE
          - APPLE
        code:
          type: string
          description: 제공자로부터 얻은 사용자별 인가 코드
          example: 1q2w3e4r
    NofficeResponseSocialAuthResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/SocialAuthResponse"
    SocialAuthResponse:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        memberName:
          type: string
        provider:
          type: string
          enum:
          - GOOGLE
          - APPLE
        token:
          "$ref": "#/components/schemas/TokenResponse"
    NotifyContentImageSaveSuccessRequest:
      type: object
      properties:
        fileName:
          type: string
    AnnouncementCreateRequest:
      required:
      - content
      - endAt
      - memberId
      - noticeBefore
      - noticeDate
      - organizationId
      - title
      type: object
      properties:
        organizationId:
          type: integer
          description: 조직 ID
          format: int64
          example: 1
        memberId:
          type: integer
          description: 공지 발행자 ID
          format: int64
          example: 1
        title:
          type: string
          description: 공지 제목
          example: 공지 제목
        content:
          type: string
          description: 공지 내용
          example: 공지 내용
        profileImageUrl:
          type: string
          description: 프로필 이미지 URL
        placeLinkName:
          type: string
          description: 장소 링크 이름
        placeLinkUrl:
          type: string
          description: 장소 링크 URL
        isFaceToFace:
          type: boolean
          description: 장소 대면/비대면 여부
          example: true
        tasks:
          type: array
          description: 투두 목록
          items:
            "$ref": "#/components/schemas/TaskCreateRequest"
        endAt:
          type: string
          description: 활동 진행 만료일
          format: date-time
        noticeBefore:
          type: array
          description: 리마인드 알림 시간 (ISO_LOCAL_DATE_TIME)
          example:
          - '2024-08-20T15:30:45'
          - '2024-08-21T15:30:45'
          items:
            type: string
            description: 리마인드 알림 시간 (ISO_LOCAL_DATE_TIME)
            format: date-time
        noticeDate:
          type: array
          description: 리마인드 알림 직접설정시간 (ISO_LOCAL_DATE_TIME)
          example:
          - '2024-08-20T15:30:45'
          - '2024-08-21T15:30:45'
          items:
            type: string
            description: 리마인드 알림 직접설정시간 (ISO_LOCAL_DATE_TIME)
            format: date-time
    TaskCreateRequest:
      required:
      - content
      type: object
      properties:
        content:
          type: string
          description: 투두 항목
          example: 노피스 API 제작
      description: 투두 목록
    AnnouncementResponse:
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
        memberId:
          type: integer
          format: int64
        announcementId:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        profileImageUrl:
          type: string
        placeLinkName:
          type: string
        placeLinkUrl:
          type: string
        endAt:
          type: string
          format: date-time
        noticeAt:
          type: array
          items:
            type: string
            format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    NofficeResponseAnnouncementResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/AnnouncementResponse"
    AnnouncementUpdateRequest:
      required:
      - content
      - endAt
      - memberId
      - noticeBefore
      - noticeDate
      - organizationId
      - title
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
        memberId:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: 공지 제목
        content:
          type: string
          example: 공지 내용
        profileImageUrl:
          type: string
          example: 프로필 이미지 URL
        placeLinkName:
          type: string
          example: 장소 링크 이름
        placeLinkUrl:
          type: string
          example: 장소 링크 URL
        isFaceToFace:
          type: boolean
          example: true
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/TaskCreateRequest"
        endAt:
          type: string
          example: 2021-07-01T 00:00:00
        noticeBefore:
          type: array
          example: "[2021-07-01T00:00:00, 2021-07-02T00:00:00]"
          items:
            type: string
            example: "[2021-07-01T00:00:00, 2021-07-02T00:00:00]"
        noticeDate:
          type: array
          items:
            type: string
    FCMCreateResponse:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        targetToken:
          type: array
          items:
            type: string
    NofficeResponseFCMCreateResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/FCMCreateResponse"
    TaskModifyRequest:
      required:
      - content
      - id
      type: object
      properties:
        id:
          type: integer
          description: 투두 항목 ID
          format: int64
          example: 1
        content:
          type: string
          description: 투두 항목
          example: 노피스 API 제작
    NofficeResponseTaskModifyResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/TaskModifyResponse"
    TaskModifyResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
    ChangeRoleRequest:
      required:
      - memberIds
      - role
      type: object
      properties:
        role:
          type: string
          description: 변경 적용할 권한
          example: LEADER, PARTICIPANT
          enum:
          - ADMIN
          - LEADER
          - PARTICIPANT
          - GUEST
        memberIds:
          type: array
          description: 변경할 대상 멤버 ID 리스트
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
            description: 변경할 대상 멤버 ID 리스트
            format: int64
    NofficeResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          type: object
    NotificationTimeChangeRequest:
      required:
      - announcementId
      - noticeBefore
      - noticeDate
      type: object
      properties:
        announcementId:
          type: integer
          description: 공지 ID
          format: int64
          example: 1
        noticeBefore:
          type: array
          description: 알림 시간 변경 초(second)
          example: 60, 120, 180
          items:
            type: string
            description: 알림 시간 변경 초(second)
            example: 60, 120, 180
        noticeDate:
          type: array
          description: 알림 시간 변경 기준 일자
          example:
          - '2021-07-01T00:00:00'
          - '2021-07-02T00:00:00'
          items:
            type: string
            description: 알림 시간 변경 기준 일자
            example: '["2021-07-01T00:00:00","2021-07-02T00:00:00"]'
    NofficeResponseNotificationTimeChangeResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/NotificationTimeChangeResponse"
    NotificationResponse:
      type: object
      properties:
        notificationId:
          type: integer
          format: int64
        announcementId:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
    NotificationTimeChangeResponse:
      type: object
      properties:
        announcementId:
          type: integer
          format: int64
        notifications:
          type: array
          items:
            "$ref": "#/components/schemas/NotificationResponse"
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    AssignedTaskResponse:
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
        organizationName:
          type: string
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/TaskResponse"
    NofficeResponseSliceAssignedTaskResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/SliceAssignedTaskResponse"
    PageableObject:
      type: object
      properties:
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        sort:
          "$ref": "#/components/schemas/SortObject"
        unpaged:
          type: boolean
    SliceAssignedTaskResponse:
      type: object
      properties:
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/AssignedTaskResponse"
        number:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    TaskResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        announcementId:
          type: integer
          format: int64
        content:
          type: string
    NofficeResponsePromotionVerifyResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/PromotionVerifyResponse"
    NofficeResponseSliceOrganizationResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/SliceOrganizationResponse"
    OrganizationResponse:
      required:
      - organizationId
      - organizationName
      - profileImage
      type: object
      properties:
        role:
          type: string
          description: 요청한 사용자의 조직 내 권한
          example: LEADER
          enum:
          - ADMIN
          - LEADER
          - PARTICIPANT
          - GUEST
        organizationId:
          type: integer
          description: 조직 ID
          format: int64
          example: 1
        organizationName:
          type: string
          description: 조직 이름
          example: 'CMC 15th : NotiTime'
        profileImage:
          type: string
          description: 프로필 이미지
          example: https://notitime.com/profile.png
        joinStatus:
          type: string
          description: 가입 상태
          example: "(string 1 of 4) : ACTIVE, PENDING, REJECTED, DELETED"
          enum:
          - ACTIVE
          - PENDING
          - REJECTED
          - DELETED
    SliceOrganizationResponse:
      type: object
      properties:
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/OrganizationResponse"
        number:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    NofficeResponseOrganizationInfoResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/OrganizationInfoResponse"
    OrganizationInfoResponse:
      required:
      - categories
      - organizationId
      - organizationName
      - profileImage
      type: object
      properties:
        role:
          type: string
          description: 요청한 사용자의 조직 내 권한
          example: LEADER
          enum:
          - ADMIN
          - LEADER
          - PARTICIPANT
          - GUEST
        organizationId:
          type: integer
          description: 조직 ID
          format: int64
          example: 1
        organizationName:
          type: string
          description: 조직 이름
          example: 'CMC 15th : NotiTime'
        profileImage:
          type: string
          description: 프로필 이미지
          example: https://notitime.com/profile.png
        categories:
          type: array
          description: 카테고리 리스트
          example: "['컴퓨터공학', '전자공학']"
          items:
            type: string
            description: 카테고리 리스트
            example: "['컴퓨터공학', '전자공학']"
        leaderCount:
          type: integer
          description: 관리자 사용자 수
          format: int64
          example: 10
        participantCount:
          type: integer
          description: 일반 사용자 수
          format: int64
          example: 100
        isPending:
          type: boolean
          description: 가입 대기자 여부
          example: true
    NofficeResponseOrganizationSignupResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/OrganizationSignupResponse"
    OrganizationSignupResponse:
      type: object
      properties:
        organizationId:
          type: integer
          description: 조직 ID
          format: int64
          example: 1
        organizationName:
          type: string
          description: 조직 이름
          example: 'CMC 15th : NotiTime'
        profileImage:
          type: string
          description: 프로필 이미지
          example: https://notitime.com/profile.png
    CommonImageResponse:
      required:
      - id
      - type
      - url
      type: object
      properties:
        type:
          type: string
          description: 이미지 타입
          example: ORGANIZATION_LOGO
          enum:
          - ORGANIZATION_LOGO
          - MEMBER_PROFILE
          - ANNOUNCEMENT_PROFILE
          - ANNOUNCEMENT_CONTENT
          - PROMOTION_COVER
        id:
          type: integer
          description: 이미지 ID
          format: int64
          example: 1
        url:
          type: string
          description: 이미지 URL
          example: https://test-image.com/image.jpg
      description: 조직 커버 이미지 URL 리스트
    NofficeResponseOrganizationImageResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/OrganizationImageResponse"
    OrganizationImageResponse:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          description: 조직 ID
          format: int64
        images:
          type: array
          description: 조직 커버 이미지 URL 리스트
          items:
            "$ref": "#/components/schemas/CommonImageResponse"
    MemberInfoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        alias:
          type: string
        profileImage:
          type: string
    NofficeResponseListMemberInfoResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          type: array
          items:
            "$ref": "#/components/schemas/MemberInfoResponse"
    AnnouncementCoverResponse:
      type: object
      properties:
        announcementId:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        profileImageUrl:
          type: string
        placeLinkName:
          type: string
        placeLinkUrl:
          type: string
        endAt:
          type: string
          format: date-time
        readerCount:
          type: integer
          format: int64
        totalMemberCount:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    NofficeResponseSliceAnnouncementCoverResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/SliceAnnouncementCoverResponse"
    SliceAnnouncementCoverResponse:
      type: object
      properties:
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/AnnouncementCoverResponse"
        number:
          type: integer
          format: int32
        sort:
          "$ref": "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    MemberResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        alias:
          type: string
        profileImage:
          type: string
        organizations:
          type: array
          items:
            "$ref": "#/components/schemas/OrganizationResponse"
    NofficeResponseMemberResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/MemberResponse"
    ContentImagePresignedUrlVO:
      type: object
      properties:
        fileName:
          type: string
        urls:
          type: object
          additionalProperties:
            type: string
    NofficeResponseCategoryResponses:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/CategoryResponses"
    NofficeResponseReadStatusResponse:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/ReadStatusResponse"
    ReadStatusResponse:
      type: object
      properties:
        announcementId:
          type: integer
          format: int64
        memberList:
          type: array
          items:
            "$ref": "#/components/schemas/MemberInfoResponse"
    NofficeResponseTaskResponses:
      type: object
      properties:
        timestamp:
          type: string
        httpStatus:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/TaskResponses"
    TaskResponses:
      type: object
      properties:
        tasks:
          type: array
          items:
            "$ref": "#/components/schemas/TaskResponse"
  securitySchemes:
    Bearer_Token:
      type: http
      scheme: bearer
      bearerFormat: JWT
